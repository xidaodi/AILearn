'''
练习题
'''

'''
1。 定义一个正则表达式来验证邮箱是否正确
123456@qq.com -- 纯数字
wangwu@qq.com -- 纯字母
wang123@126.com -- 数字加字母
wang_san@163.com -- 混合型
lisi@vip.163.com -- 多级域名
chang@ge.cn  --  企业邮箱（企业域名）
zhang.san@gmail.com -- 含有点的

左边部分
[a-zA-Z0-9]+([_\.][a-zA-Z0-9]+)*
右边部分
@(\w+\.)+[a-z]{2,6}
'''

import re

emailarr = [
    '123456@qq.com',
    '123456@qq.com',
    'wangwu@qq.com',
    'wang123@126.com',
    'lisi@vip.sina.com.123cn',
    'chang@ge.cn',
    'zhang.san@gmail.com'
]

# 注意： 需要验证的是一个完成的字符串是否符合邮箱的规则，因此必须加 限制开始^ 和限制结尾的符号 $
# reg = '^[a-zA-Z0-9]+([_\.][a-zA-Z0-9]+)*@(\w+\.)+[a-z]{2,6}$'
#
# for i in emailarr:
#     res = re.search(reg,i)
#     if not res:
#         print('邮箱格式不正确',i)

'''
2。 完善 手机号码的正则表达式
常规手机号码规则
    13[0-9],14[5-9],15[0-3,5-9],16[2,5,6,7,8],17[0-8],18[0-9],19[0-3,5-9]

'''
phonearr = [
    '13701383017',
    '17610195211',
    '177011052021',
]
reg = '^(13[0-9]|14[5-9]|15[0-3,5-9]|16[2,5,6,7,8]|17[0-8]|18[0-9]|19[0-3,5-9])\d{8}$'

# for i in phonearr:
#     res = re.search(reg,i)
#     if not res:
#         print('手机号码格式不正确：',i)

'''
3。 定义一个匹配IP的正则表达式 0-255   255.255.255.254
0.0.0.0 ~ 255.255.255.255

先匹配 0～199的范围 也就是0或者1开头的 
[0,1]?\d{1,2}

在匹配 200-255的范围
第一位是2，那么第二位是0-4，那么第三位就是0-9
第一位是2，那么第二位是5，那么第三位只能是0-5
2([0-4] [0-9]|5[0-5])
'''
iparr = [
    '10.11.21.105',
    '192.168.1.1',
    '192.168.104.111',
    '255.118.11.33',
    '256.188.12.44',
    '0.0.0.0',
    '8.8.8.8'
]


reg = '^([0|1]?\d{1,2}|2([0-4][0-9]|5[0-5]))(\.[0,1]?\d{1,2}|2([0-4][0-9]|5[0-5])){3}$'

for i in iparr:
    res = re.search(reg,i)
    if not res:
        print('IP地址不正确',i)
    else:
        print(res)
